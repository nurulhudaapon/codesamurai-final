datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator zod {
  provider                 = "zod-prisma-types"
  output                   = "./generated/zod" // default is ./generated/zod
  // useMultipleFiles                 = true // default is false
  // writeBarrelFiles                 = false // default is true
  createInputTypes         = false // default is true
  createModelTypes         = false // default is true
  addInputTypeValidation   = false // default is true
  addIncludeType           = false // default is true
  // addSelectType                    = false // default is true
  // validateWhereUniqueInput         = true // default is false
  // createOptionalDefaultValuesTypes = true // default is false
  // createRelationValuesTypes        = true // default is false
  // createPartialTypes               = true // default is false
  // useDefaultValidators             = false // default is true
  // coerceDate                       = false // default is true
  writeNullishInModelTypes = true // default is false
  // prismaClientPath                 = "./path/to/prisma/client" // default is client output path
}

// generate prisma client
generator client {
  provider = "prisma-client-js"
}

generator markdown {
  provider = "prisma-markdown"
  output   = "./../../README.md"
  title    = "EcoSync Database"
}

/// @namespace Accounts
/// Represents users in the system.
/// This model stores information about users.
model users {
  /// Unique identifier for the user.
  id          String        @id @db.Uuid

  /// Timestamp indicating when the user was created.
  created_at  DateTime      @db.Timestamptz(6)

  /// Timestamp indicating when the user was last updated.
  updated_at  DateTime      @db.Timestamptz(6)

  /// First name of the user (optional).
  first_name  String?       @db.VarChar(100)

  /// Last name of the user (optional).
  last_name String?       @db.VarChar(100)

  /// Email address of the user.
  email       String        @db.VarChar(320)

  /// Phone number of the user.
  phone       String        @db.VarChar(80)

  /// Timestamp indicating when the user last logged in (optional).
  last_login_at  DateTime?     @db.Timestamptz(6)
  
  /// JSONB field for storing informatin regarding auth and provider related data
  auth   Json?         @default("{}")
  
  /// JSON field for storing extra data
  extra_data  Json?         @default("{}")

  /// Password associated with the user (optional).
  password    String?       @db.VarChar(255)

  /// Role of the user (default sts).
  role        users_role  @default(admin)

  /// State of the user (default active).
  state       users_state @default(active)

  /// Index for searching by HubSpot ID
  @@index([email, password])
}

enum users_role {
  /// Admin role.
  admin

  /// STS role.
  sts
}

enum users_state {
  /// Active state.
  active

  /// Inactive state.
  inactive
}